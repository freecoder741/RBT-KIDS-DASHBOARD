<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>RBT Dashboard</title>
  <style>
    /* General Reset */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: Arial, sans-serif;
    }

    body {
      display: flex;
      flex-direction: column;
      align-items: center;
      background-color: #f5f5f5;
      color: #333;
      padding: 20px;
    }

    /* Header */
    header {
      width: 100%;
      background-color: #0078d4;
      color: white;
      text-align: center;
      padding: 20px 0;
      font-size: 24px;
      font-weight: bold;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
    }

    /* Notification Bar */
    .notification {
      position: fixed;
      top: 0;
      left: 50%;
      transform: translateX(-50%);
      background-color: #ffcc00;
      color: black;
      padding: 10px;
      border-radius: 5px;
      width: 80%;
      text-align: center;
      display: none;
      z-index: 1000;
    }

    /* Dashboard Layout */
    .dashboard-container {
      display: flex;
      flex-direction: row;
      gap: 20px;
      max-width: 1200px;
      width: 100%;
      margin-top: 20px;
    }

    /* Sidebar */
    .sidebar {
      width: 25%;
      background-color: #ffffff;
      border-radius: 10px;
      padding: 15px;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
    }

    .activity-label {
      font-size: 18px;
      font-weight: bold;
      margin-top: 20px;
    }

    .result-buttons {
      display: flex;
      justify-content: space-between;
      margin-top: 5px;
    }

    .result-buttons button {
      width: 30%;
      background-color: #FD0E67;
      color: black;
      font-size: 14px;
      padding: 5px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    .result-buttons button:hover {
      background-color: #e69500;
    }

    /* Note Submission */
    .note-submission {
      margin-top: 20px;
      padding: 15px;
      background-color: #ffffff;
      border-radius: 10px;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
      width: 100%;
      text-align: center;
    }

    .note-submission textarea {
      width: 90%;
      height: 80px;
      padding: 10px;
      margin-bottom: 10px;
      border: 1px solid #ccc;
      border-radius: 5px;
      font-size: 14px;
    }

    .note-submission button {
      background-color: #0078d4;
      color: white;
      font-size: 14px;
      padding: 10px 20px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    .note-submission button:hover {
      background-color: #005bb5;
    }

    /* Admin Modal */
    .admin-modal {
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) scale(0);
      background-color: #ffef96;
      border-radius: 15px;
      padding: 20px;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
      width: 60%;
      max-width: 500px;
      display: none;
      animation: popIn 0.5s forwards;
    }

    @keyframes popIn {
      from {
        transform: translate(-50%, -50%) scale(0);
        opacity: 0;
      }
      to {
        transform: translate(-50%, -50%) scale(1);
        opacity: 1;
      }
    }

    .admin-modal h2 {
      font-size: 24px;
      text-align: center;
      margin-bottom: 10px;
    }

    .admin-modal input {
      width: 100%;
      padding: 10px;
      margin: 10px 0;
      border: 2px solid #ccc;
      border-radius: 5px;
      font-size: 16px;
    }

    .admin-modal button {
      width: 100%;
      padding: 10px;
      background-color: #ff5722;
      color: white;
      border: none;
      border-radius: 5px;
      font-size: 16px;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    .admin-modal button:hover {
      background-color: #e64a19;
    }

    /* Admin Data Display */
    .admin-data {
      margin-top: 20px;
      padding: 10px;
      background-color: #ffffff;
      border: 2px solid #ff5722;
      border-radius: 10px;
      overflow-y: auto;
      max-height: 400px;
      margin-bottom: 20px;
    }

    .admin-data table {
      width: 100%;
      border-collapse: collapse;
    }

    .admin-data th,
    .admin-data td {
      padding: 8px;
      text-align: left;
      border-bottom: 1px solid #ddd;
    }

    .admin-data th {
      background-color: #f4f4f4;
    }

    .admin-data pre {
      font-size: 14px;
      line-height: 1.5;
      color: #333;
    }

    .admin-data .notes {
      list-style-type: none;
      padding-left: 0;
    }

    .admin-data .notes li {
      margin-bottom: 10px;
      padding: 10px;
      background-color: #f9f9f9;
      border: 1px solid #ddd;
      border-radius: 5px;
    }

    /* Admin Button at Bottom */
    .admin-button {
      margin-top: 30px;
      padding: 10px 20px;
      background-color: #ff5722;
      color: white;
      font-size: 16px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    .admin-button:hover {
      background-color: #e64a19;
    }
 </style>
</head>
<body>
  <header>
    RBT Dashboard
  </header>

  <!-- Notification Bar -->
  <div id="notification" class="notification">
    <span id="notification-message"></span>
  </div>

  <div class="dashboard-container">
    <aside class="sidebar">
      <!-- Activity Buttons -->
      <div class="activity-label">‚ù§Ô∏èTACT ACT AND AIM‚ù§Ô∏è</div>
      <div class="result-buttons">
        <button onclick="recordResult('‚ù§Ô∏èTACT ACT AND AIM‚ù§Ô∏è', 'IND')">IND</button>
        <button onclick="recordResult('‚ù§Ô∏èTACT ACT AND AIM‚ù§Ô∏è', 'ERR')">ERR</button>
        <button onclick="recordResult('‚ù§Ô∏èTACT ACT AND AIM‚ù§Ô∏è', 'NR')">NR</button>
      </div>

      <div class="activity-label">üòÇTACT EMOTION SELFüòÇ</div>
      <div class="result-buttons">
        <button onclick="recordResult('üòÇTACT EMOTION SELFüòÇ', 'IND')">IND</button>
        <button onclick="recordResult('üòÇTACT EMOTION SELFüòÇ', 'ERR')">ERR</button>
        <button onclick="recordResult('üòÇTACT EMOTION SELFüòÇ', 'NR')">NR</button>
      </div>

      <div class="activity-label">üë®‚Äçüë©‚Äçüëß‚Äçüë¶TAKING PERSPECTIVE OF OTHERSüë®‚Äçüë©‚Äçüëß‚Äçüë¶</div>
      <div class="result-buttons">
        <button onclick="recordResult('üë®‚Äçüë©‚Äçüëß‚Äçüë¶TAKING PERSPECTIVE OF OTHERSüë®‚Äçüë©‚Äçüëß‚Äçüë¶', 'IND')">IND</button>
        <button onclick="recordResult('üë®‚Äçüë©‚Äçüëß‚Äçüë¶TAKING PERSPECTIVE OF OTHERSüë®‚Äçüë©‚Äçüëß‚Äçüë¶', 'ERR')">ERR</button>
        <button onclick="recordResult('üë®‚Äçüë©‚Äçüëß‚Äçüë¶TAKING PERSPECTIVE OF OTHERSüë®‚Äçüë©‚Äçüëß‚Äçüë¶', 'NR')">NR</button>
      </div>

      <div class="activity-label">üë¶üí¨POLITELY MANDüë¶üí¨</div>
      <div class="result-buttons">
        <button onclick="recordResult('üë¶üí¨POLITELY MANDüë¶üí¨', 'IND')">IND</button>
        <button onclick="recordResult('üë¶üí¨POLITELY MANDüë¶üí¨', 'ERR')">ERR</button>
        <button onclick="recordResult('üë¶üí¨POLITELY MANDüë¶üí¨', 'NR')">NR</button>
      </div>

      <div class="activity-label">üì±PHONE TIMEüì±</div>
      <div class="result-buttons">
        <button onclick="recordResult('üì±PHONE TIMEüì±', 'YES')">YES</button>
        <button onclick="recordResult('üì±PHONE TIMEüì±', 'NO')">NO</button>
        <button onclick="recordResult('üì±PHONE TIMEüì±', 'MAYBE')">MAYBE</button>
      </div>
    </aside>

    <div class="note-submission">
      <!-- Note Submission Section -->
      <textarea id="note-input" placeholder="Write a note..."></textarea>
      <button onclick="submitNote()">Submit Note</button>
    </div>
  </div>

  <!-- Admin Access Modal -->
  <div id="adminModal" class="admin-modal">
    <h2>Admin Access</h2>
    <input type="text" id="admin-username" placeholder="Username" />
    <input type="password" id="admin-password" placeholder="Password" />
    <button onclick="loginAdmin()">Login</button>
  </div>

  <!-- Admin Data Display -->
  <div id="adminData" class="admin-data" style="display: none;">
    <h3>Admin Data</h3>
    <div id="adminDataContainer">
      <table>
        <thead>
          <tr>
            <th>Activity</th>
            <th>Result</th>
          </tr>
        </thead>
        <tbody id="data-table-body"></tbody>
      </table>
      <div id="notes-container">
        <h4>Submitted Notes</h4>
        <ul id="notes-list" class="notes"></ul>
      </div>
    </div>
  </div>

  <!-- Admin Login Button -->
  <button id="adminButton" class="admin-button" onclick="openAdminModal()">Admin Access</button>

  <script>
    let activitiesData = [];
    let notes = [];
    const validUsers = [
      { username: "admin", password: "password123" }, // example user
      { username: "guest", password: "0000" }, 
      { username: "fav rbt!", password: "best person ever!" },
      { username: "libbith", password: "spongebob squarepants" },
      { username: "mac and cheese", password: "w/ tuna" }, 
      { username: "RBT", password: "goodppl" },
      { username: "austin", password: "1057" },
      { username: "codemaster", password: "7410" },
      
      
      // Add more users here if needed
    ];

    // Open Admin Modal
    function openAdminModal() {
      document.getElementById("adminModal").style.display = "block";
    }

    // Admin Login Validation
    function loginAdmin() {
      const username = document.getElementById("admin-username").value;
      const password = document.getElementById("admin-password").value;
      const user = validUsers.find(u => u.username === username && u.password === password);

      if (user) {
        document.getElementById("adminModal").style.display = "none";
        displayAdminData();
      } else {
        alert("Invalid username or password!");
      }
    }

    // Display Admin Data
    function displayAdminData() {
      const tableBody = document.getElementById("data-table-body");
      tableBody.innerHTML = "";
      activitiesData.forEach(activity => {
        const row = document.createElement("tr");
        row.innerHTML = `<td>${activity.name}</td><td>${activity.result}</td>`;
        tableBody.appendChild(row);
      });

      const notesList = document.getElementById("notes-list");
      notesList.innerHTML = "";
      notes.forEach(note => {
        const listItem = document.createElement("li");
        listItem.textContent = note;
        notesList.appendChild(listItem);
      });

      document.getElementById("adminData").style.display = "block";
    }

    // Record Activity Result
    function recordResult(activityName, result) {
      activitiesData.push({ name: activityName, result: result });
      showNotification(`${activityName} recorded as ${result}`);
    }

    // Submit Note
    function submitNote() {
      const note = document.getElementById("note-input").value;
      if (note) {
        notes.push(note);
        document.getElementById("note-input").value = "";
        showNotification("Note submitted successfully.");
      }
    }

    // Show Notification
    function showNotification(message) {
      const notification = document.getElementById("notification");
      document.getElementById("notification-message").textContent = message;
      notification.style.display = "block";
      setTimeout(() => notification.style.display = "none", 3000);
    }
  </script>
</body>
</html>
